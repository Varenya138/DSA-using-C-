class Solution {
public:
    int numRookCaptures(vector<vector<char>>& board) {
        int rookX, rookY;
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                if (board[i][j] == 'R') {
                    rookX = i;
                    rookY = j;
                    break;
                }
            }
        }
        
        int captures = 0;
        
        // Check up
        for (int i = rookX - 1; i >= 0; i--) {
            if (board[i][rookY] == 'p') {
                captures++;
                break;
            } else if (board[i][rookY] != '.') {
                break;
            }
        }
        
        // Check down
        for (int i = rookX + 1; i < 8; i++) {
            if (board[i][rookY] == 'p') {
                captures++;
                break;
            } else if (board[i][rookY] != '.') {
                break;
            }
        }
        
        // Check left
        for (int i = rookY - 1; i >= 0; i--) {
            if (board[rookX][i] == 'p') {
                captures++;
                break;
            } else if (board[rookX][i] != '.') {
                break;
            }
        }
        
        // Check right
        for (int i = rookY + 1; i < 8; i++) {
            if (board[rookX][i] == 'p') {
                captures++;
                break;
            } else if (board[rookX][i] != '.') {
                break;
            }
        }
        
        return captures;
    }
};
