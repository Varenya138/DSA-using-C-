class MinStack {
public:
    int dataIdx = -1;
    int* data;

    int minPosIdx = -1;
    int* minIdxs;

    MinStack() {
        data = (int*)malloc(sizeof(int) * 3 * (1e4));
        minIdxs = (int*)malloc(sizeof(int) * 3 * (1e4));
    }

    ~MinStack() {
        free(data);
        free(minIdxs);
    }
    
    void push(int val) {
        dataIdx += 1;
        
        if(dataIdx == 0 || val <= data[minIdxs[minPosIdx]]) {
            minPosIdx += 1;
            minIdxs[minPosIdx] = dataIdx;
        }

        data[dataIdx] = val;
    }
    
    void pop() {
        if(minIdxs[minPosIdx] == dataIdx){
            minPosIdx -= 1;
        }
        dataIdx -= 1;
    }
    
    int top() {
        return data[dataIdx];
    }
    
    int getMin() {
        return data[minIdxs[minPosIdx]];
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
